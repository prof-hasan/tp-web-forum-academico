name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    #services:
    #  mongo:
    #    image: mongo:latest
    #    ports:
    #      - 27017:27017
    #    options: >-
    #      --health-cmd "echo 'db.runCommand({ ping: 1 })' | mongo --quiet"
    #      --health-interval 60s
    #      --health-timeout 30s
    #      --health-retries 10

    steps:
    #  - name: Check MongoDB logs
    #    if: failure()
    #    run: docker logs $(docker ps -q --filter ancestor=mongo:latest)


    #  - name: Check out repository
    #    uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      #- name: Run backend tests
      #  working-directory: ./backend
      #  run: |
      #    source venv/bin/activate
      #    pytest

      #- name: Run frontend tests
      #  working-directory: ./frontend
      #  run: npm test
